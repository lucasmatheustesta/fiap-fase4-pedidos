name: 🔍 AWS Deploy Debug

on:
  workflow_dispatch:  # Permite execução manual
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/deploy-aws.yml'
      - 'apprunner.yaml'

jobs:
  debug-secrets:
    name: 🔍 Debug AWS Secrets Configuration
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Check GitHub Secrets Configuration
        run: |
          echo "🔍 Checking GitHub Secrets configuration..."
          echo ""
          
          # Verificar se secrets existem (sem mostrar valores)
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "❌ AWS_ACCESS_KEY_ID secret not configured"
            echo "💡 Please add AWS_ACCESS_KEY_ID to GitHub repository secrets"
            SECRET_MISSING=true
          else
            echo "✅ AWS_ACCESS_KEY_ID secret is configured"
            echo "📏 Length: ${#AWS_ACCESS_KEY_ID} characters"
          fi
          
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "❌ AWS_SECRET_ACCESS_KEY secret not configured"
            echo "💡 Please add AWS_SECRET_ACCESS_KEY to GitHub repository secrets"
            SECRET_MISSING=true
          else
            echo "✅ AWS_SECRET_ACCESS_KEY secret is configured"
            echo "📏 Length: ${#AWS_SECRET_ACCESS_KEY} characters"
          fi
          
          if [ -z "${{ secrets.AWS_ACCOUNT_ID }}" ]; then
            echo "❌ AWS_ACCOUNT_ID secret not configured"
            echo "💡 Please add AWS_ACCOUNT_ID to GitHub repository secrets"
            SECRET_MISSING=true
          else
            echo "✅ AWS_ACCOUNT_ID secret is configured"
            echo "📏 Length: ${#AWS_ACCOUNT_ID} characters"
          fi
          
          echo ""
          echo "🔧 Repository Information:"
          echo "Repository: ${{ github.repository }}"
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          
          if [ "$SECRET_MISSING" = "true" ]; then
            echo ""
            echo "❌ Some secrets are missing. Please configure them at:"
            echo "https://github.com/${{ github.repository }}/settings/secrets/actions"
            exit 1
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

      - name: 🧪 Test AWS Credentials (if secrets exist)
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        run: |
          echo "🧪 Testing AWS credentials..."
          
          # Configurar AWS CLI
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
          
          # Testar credenciais
          echo "🔍 Testing AWS STS (Security Token Service)..."
          if aws sts get-caller-identity; then
            echo "✅ AWS credentials are valid!"
          else
            echo "❌ AWS credentials are invalid or insufficient permissions"
            exit 1
          fi
          
          echo ""
          echo "🔍 Testing App Runner permissions..."
          if aws apprunner list-services --region us-east-1 > /dev/null 2>&1; then
            echo "✅ App Runner permissions are working!"
          else
            echo "⚠️ App Runner permissions may be insufficient"
            echo "💡 Make sure your IAM user has AppRunnerFullAccess policy"
          fi

      - name: 📋 Generate Troubleshooting Report
        if: always()
        run: |
          echo "📋 TROUBLESHOOTING REPORT"
          echo "========================"
          echo ""
          echo "🔧 Common Solutions:"
          echo ""
          echo "1. 📝 Add secrets to GitHub repository:"
          echo "   Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
          echo "   Add these secrets:"
          echo "   - AWS_ACCESS_KEY_ID (your AWS access key)"
          echo "   - AWS_SECRET_ACCESS_KEY (your AWS secret key)"
          echo "   - AWS_ACCOUNT_ID (your 12-digit AWS account ID)"
          echo ""
          echo "2. 🔑 Create AWS IAM User:"
          echo "   - Go to AWS Console > IAM > Users"
          echo "   - Create new user with programmatic access"
          echo "   - Attach policy: AppRunnerFullAccess"
          echo "   - Copy Access Key ID and Secret Access Key"
          echo ""
          echo "3. 🏢 For Organization repositories:"
          echo "   - Check if organization allows secrets"
          echo "   - May need organization admin approval"
          echo ""
          echo "4. 🔄 If secrets were just added:"
          echo "   - Wait 1-2 minutes for propagation"
          echo "   - Re-run the workflow"
          echo ""
          echo "5. 📱 Verify secret names exactly match:"
          echo "   - AWS_ACCESS_KEY_ID (not aws_access_key_id)"
          echo "   - AWS_SECRET_ACCESS_KEY (not aws_secret_access_key)"
          echo "   - AWS_ACCOUNT_ID (not aws_account_id)"
          echo ""
          echo "🆘 If still having issues:"
          echo "   - Check AWS IAM user permissions"
          echo "   - Verify AWS account is active"
          echo "   - Try creating new access keys"
          echo "   - Contact AWS support if needed"

  test-without-secrets:
    name: 🧪 Test Workflow Without AWS
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧪 Run basic tests
        run: |
          echo "🧪 Running basic application tests..."
          python -c "
          import sys
          sys.path.append('src')
          try:
              from main import app
              print('✅ Application imports successfully')
              with app.test_client() as client:
                  response = client.get('/api/health')
                  if response.status_code == 200:
                      print('✅ Health endpoint working')
                  else:
                      print(f'⚠️ Health endpoint returned: {response.status_code}')
          except Exception as e:
              print(f'❌ Application test failed: {e}')
              sys.exit(1)
          "

      - name: 📊 Application Status
        run: |
          echo "📊 APPLICATION STATUS REPORT"
          echo "============================"
          echo ""
          echo "✅ Code checkout: Success"
          echo "✅ Python setup: Success"
          echo "✅ Dependencies: Success"
          echo "✅ Application: Working"
          echo ""
          echo "🎯 Next step: Configure AWS secrets for deployment"
          echo "📝 Follow the troubleshooting guide above"

